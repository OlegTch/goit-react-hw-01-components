{"version":3,"sources":["components/profile/Profile.module.css","components/FriendList/FriendList.module.css","components/statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","components/profile/Profile.js","components/statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionItem.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","props","username","tag","location","avatar","stats","className","styles","profile","description","src","alt","name","label","quantity","followers","views","likes","StatisticsItem","id","percentage","item","Statistics","title","statistics","map","statistic","Friend","isOnline","status","online","offline","width","FriendList","friends","friend","TransactionItem","type","amount","currency","TransactionHistory","items","transaction","console","log","App","user","data","transactions","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.d0ea46b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2_MIl\",\"description\":\"Profile_description__25bEM\",\"avatar\":\"Profile_avatar__3Tk8P\",\"name\":\"Profile_name__I0iel\",\"tag\":\"Profile_tag__10X9Y\",\"stats\":\"Profile_stats__27CUo\",\"label\":\"Profile_label__3rM7J\",\"quantity\":\"Profile_quantity__3K7Wu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend-list\":\"FriendList_friend-list__3DQUX\",\"item\":\"FriendList_item__UraMO\",\"status\":\"FriendList_status__1D44l\",\"online\":\"FriendList_online__3UsSr\",\"offline\":\"FriendList_offline__1peB6\",\"avatar\":\"FriendList_avatar__36_nG\",\"name\":\"FriendList_name__HL6Kw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2Xoc2\",\"title\":\"Statistics_title__rl3nR\",\"stat-list\":\"Statistics_stat-list__2xASK\",\"item\":\"Statistics_item__2EGtS\",\"label\":\"Statistics_label__hGUPf\",\"percentage\":\"Statistics_percentage__3lLHi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction-history\":\"TransactionHistory_transaction-history__3-rAZ\"};","import PropTypes from \"prop-types\";\nimport styles from \"./Profile.module.css\";\n\nconst Profile = (props) => {\n  const { username, tag, location, avatar, stats } = props;\n  return (\n    <div className={styles.profile}>\n      <div className={styles.description}>\n        <img src={avatar} alt={username} className={styles.avatar} />\n        <p className={styles.name}>{username}</p>\n        <p className={styles.tag}>@{tag}</p>\n        <p className={styles.location}>{location}</p>\n      </div>\n\n      <ul className={styles.stats}>\n        <li>\n          <span className={styles.label}>Followers</span>\n          <span className={styles.quantity}>{stats.followers}</span>\n        </li>\n        <li>\n          <span className={styles.label}>Views</span>\n          <span className={styles.quantity}>{stats.views}</span>\n        </li>\n        <li>\n          <span className={styles.label}>Likes</span>\n          <span className={styles.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  username: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Profile;\n","import PropTypes from \"prop-types\";\nimport styles from \"./Statistics.module.css\";\n\nconst StatisticsItem = (props) => {\n  const { id, label, percentage } = props;\n  return (\n    <li className={styles.item} id={id}>\n      <span className={styles.label}>{label}</span>\n      <span className={styles.percentage}>{percentage}%</span>\n    </li>\n  );\n};\n\nfunction Statistics({ title, stats }) {\n  return (\n    <section className={styles.statistics}>\n      {title && <h2 className={styles.title}>Upload stats</h2>}\n      <ul className={styles[\"stat-list\"]}>\n        {stats.map((statistic) => (\n          // <li className=\"item\" key={statistic.id}>\n          <StatisticsItem\n            key={statistic.id}\n            label={statistic.label}\n            percentage={statistic.percentage}\n          />\n          // </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default Statistics;\n\n// import data from \"/путь/к/data.json\";\n\n// <Statistics title=\"Upload stats\" stats={data} />;\n// <Statistics stats={data} />;\n","import PropTypes from \"prop-types\";\nimport styles from \"./FriendList.module.css\";\n\nfunction Friend(props) {\n  const { isOnline, avatar, name } = props;\n  return (\n    <li className={styles.item}>\n      {isOnline ? (\n        <span className={`${styles.status} ${styles.online}`}> </span>\n      ) : (\n        <span className={`${styles.status} ${styles.offline}`}> </span>\n      )}\n      <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\n      <p className={styles.name}>{name}</p>\n    </li>\n  );\n}\n\nFriend.propTypes = {\n  isOnline: PropTypes.bool.isRequired,\n  // isOnline: PropTypes.oneOf([true, false]).isRequired,\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default Friend;\n","import Friend from \"./FriendListItem\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./FriendList.module.css\";\n\nfunction FriendList({ friends }) {\n  return (\n    <ul className={styles[\"friend-list\"]}>\n      {friends.map((friend) => (\n        // <li key={friend.id}>\n        <Friend\n          key={friend.id}\n          isOnline={friend.isOnline}\n          avatar={friend.avatar}\n          name={friend.name}\n        />\n        // </li>\n      ))}\n    </ul>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\nexport default FriendList;\n","import PropTypes from \"prop-types\";\n\nfunction TransactionItem(props) {\n  const { type, amount, currency } = props;\n  return (\n    <tr>\n      <td>{type}</td>\n      <td>{amount}</td>\n      <td>{currency}</td>\n    </tr>\n  );\n}\n\nTransactionItem.propTypes = {\n  //   id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n};\n\nexport default TransactionItem;\n","import TransactionItem from \"./TransactionItem\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./TransactionHistory.module.css\";\n\nfunction TransactionHistory({ items }) {\n  return (\n    <table className={styles[\"transaction-history\"]}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map((transaction) => (\n          <TransactionItem\n            key={transaction.id}\n            type={transaction.type}\n            amount={transaction.amount}\n            currency={transaction.currency}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default TransactionHistory;\n","import Profile from \"./components/profile/Profile\";\nimport Statistics from \"./components/statistics/Statistics\";\nimport FriendList from \"./components/FriendList/FriendList\";\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\n\nimport user from \"./components/profile/user.json\";\nimport data from \"./components/statistics/data.json\";\nimport friends from \"./components/FriendList/friends.json\";\nimport transactions from \"./components/TransactionHistory/transactions.json\";\n\nconsole.log(\"profile\");\n\nfunction App() {\n  return (\n    <div>\n      <Profile\n        username={user.username}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={data} />\n      <Statistics stats={data} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />;\n    </div>\n  );\n}\n\nexport default App;\n","// import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById(\"root\")\n// );\n\n// ============================================================\n\n// ============================================================\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}